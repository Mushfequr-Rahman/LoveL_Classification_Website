extends layout

block content 
    h1=title
    script(src = "https://d3js.org/d3.v5.min.js")
    table(style='width:100%', border='1')
     
        table(style='width:40%', border='1')
            tr 
                th time 
                th gift 
                th words 
                th service 
                th touch 
            tr 
                th=time 
                th=gift 
                th=words 
                th=service 
                th=touch 
        
        table(style='width:40%', border='1')
            tr 
                th time 
                th gift 
                th words 
                th service 
                th touch 
            tr 
                th=ptime 
                th=pgift 
                th=pwords 
                th=pservice 
                th=ptouch 
    div(id='viz')
    script(type="text/javascript").
        var time = #{time}; 
        var gift = #{gift}
        var words = #{words}; 
        var service = #{service}
        var touch = #{touch}


        var svg = d3.select("#viz")
        .append("svg")
        .attr("width",500)
        .attr("height",500)

        let data = [{ time, gift,words,service,touch}]
        
        var time = #{ptime}; 
        var gift = #{pgift}
        var words = #{ptime}; 
        var service = #{gift}
        var touch = #{ptime}

        
        
        stuff = {time,gift,words,service,touch};
        data.push(stuff)
        //data = [{1,2,4,5,6},{1,3,5,2,5}];
        let features = ["time","gift","words","service","touch"];
        //generate the data
        console.log(data)

        let radialScale = d3.scaleLinear()
        .domain([0,10])
        .range([0,250]);
        
        let ticks = [2,4,6,8,10];

        ticks.forEach(t =>
        svg.append("circle")
        .attr("cx", 250)
        .attr("cy", 250)
        .attr("fill", "none")
        .attr("stroke", "gray")
        .attr("r", radialScale(t)));

        ticks.forEach(t =>
        svg.append("text")
        .attr("x", 255)
        .attr("y", 250 - radialScale(t))
        .text(t.toString()));


        function angleToCoordinate(angle, value){
        let x = Math.cos(angle) * radialScale(value);
        let y = Math.sin(angle) * radialScale(value);
        return {"x": 250 + x, "y": 250 - y};}

        for (var i = 0; i < features.length; i++) {
            let ft_name = features[i];
            let angle = (Math.PI / 2) + (2 * Math.PI * i / features.length);
            let line_coordinate = angleToCoordinate(angle, 10);
            let label_coordinate = angleToCoordinate(angle, 10.5);

            //draw axis line
            svg.append("line")
            .attr("x1", 250)
            .attr("y1", 250)
            .attr("x2", line_coordinate.x)
            .attr("y2", line_coordinate.y)
            .attr("stroke","black");

            //draw axis label
            svg.append("text")
            .attr("x", label_coordinate.x)
            .attr("y", label_coordinate.y)
            .text(ft_name);
        }

        let line = d3.line()
        .x(d => d.x)
        .y(d => d.y);
        let colors = ["navy", "red"];

        function getPathCoordinates(data_point){
        let coordinates = [];
        for (var i = 0; i < features.length; i++){
            let ft_name = features[i];
            let angle = (Math.PI / 2) + (2 * Math.PI * i / features.length);
            coordinates.push(angleToCoordinate(angle, data_point[ft_name]));
        }
        return coordinates;}

        for (var i = 0; i < data.length; i ++){
        let d = data[i];
        let color = colors[i];
        let coordinates = getPathCoordinates(d);

        //draw the path element
        svg.append("path")
        .datum(coordinates)
        .attr("d",line)
        .attr("stroke-width", 3)
        .attr("stroke", color)
        .attr("fill", color)
        .attr("stroke-opacity", 1)
        .attr("opacity", 0.5);}








   

    